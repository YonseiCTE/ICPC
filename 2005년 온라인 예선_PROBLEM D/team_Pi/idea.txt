1.
 케익을 배달할 곳을 모두 저장해 놓는다.

2.
 배달할 곳을 최적화 시켜야 한다.
 방법은 간단하다.
 먼저, N 번째 배달 위치와 N+1 번째 배달 위치에서의 최단 경로를 가지는 경우의 수는 항상 2가지 이하이다.

 아래의 예시를 보자.
 C : Current
 N : Next Destination

 C .
 . N

 위와 같은 경우는 C의 동쪽, 남쪽이 각각 C와 N의 최단 경로를 가지는 경우의 수다.

 C N
 . .

 위와 같은 경우는 C와 N이 각각 C와 N의 최단 경로를 가지는 경우의 수다.

 C X N
 . . .
 . . .

 위와 같은 경우는 X만이 C와 N의 최단 경로를 가지는 경우의 수다.

 이를통해 우리는 배달을 시킨 각각의 위치를 변경시켜 저장해 놓아 문제를 해결할 수 있다는 것을 발견하게 된다.
 "위치를 변경시킨다." 라고 하는 것은 아래의 예를 통해 설명하겠다.

 C와 N이 만약 아래와 같다면,

 C . N
 . . .
 . . .

 이는 아래와 같이 C와 N을 변경 할 수 있다.

 . (C and N) .
 .     .     .
 .     .     .

 이처럼 최단 경로를 가지는 경우로 좌표를 모두 변경 시킨다.

3.
 좌표를 변경 시켰다면 문제는 간단해진다.
 시작 위치에서부터 배달을 가야하는 모든 위치를 순서대로 계산하기만 하면 된다.
 이는 다음의 수식을 통해 가능하다.

 Distance  : 구하고자 하는 거리
 Current_M : 현재 위치의 행
 CUrrent_N : 현재 위치의 열
 Next_M    : 다음 위치의 행
 Next_N    : 다음 위치의 열

 Distance += abs ( Current_M - Next_M ) + abs ( Current_N - Next_N )